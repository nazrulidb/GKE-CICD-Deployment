name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-cicd
  GKE_ZONE: us-central1
  GAR_REPO: wordpress # Name of your Artifact Registry repo
  IMAGE_NAME: wordpresscicd # Just the name of the image
  IMAGE_TAG: latest

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    #environment: production

    # IMPORTANT: Add permissions for Workload Identity Federation (best practice)
    # or to allow the action to configure the docker credential helper.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    # The Docker login step has been REMOVED.
    # The 'auth' action automatically configures the Docker credential helper.

    - name: 'Set up GKE credentials'
      # Use an updated version of the action
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: 'Build Docker image'
      run: |-
        # CORRECTED: Construct the full image name here for consistency
        FULL_IMAGE_NAME="${{ env.GKE_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
        docker build \
          --tag "$FULL_IMAGE_NAME" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    - name: 'Publish Docker image to GAR'
      run: |-
        # CORRECTED: Use the same full image name variable
        FULL_IMAGE_NAME="${{ env.GKE_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
        docker push "$FULL_IMAGE_NAME"

    - name: 'Deploy to GKE'
      run: |-
        kubectl apply -f wordpress_deployment.yaml
        kubectl get pods
