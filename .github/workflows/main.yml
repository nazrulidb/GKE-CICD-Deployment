name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-cicd
  # Using one variable for location is simpler
  GKE_LOCATION: us-central1
  GAR_REPO: wordpress
  IMAGE_NAME: wordpresscicd
  IMAGE_TAG: latest

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    
    # You can add this back if you have configured environment secrets
    # environment: production 

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        # NOTE: Make sure this name matches your secret in GitHub Settings
        credentials_json: '${{ secrets.GK_SA_KEY }}'

    # This step is recommended to ensure gcloud is fully available
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    # The manual 'Docker configuration' step has been DELETED.
    # The 'auth' action above handles this automatically.

    - name: 'Set up GKE credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_LOCATION }}

    - name: Configure Docker
      run: |
        gcloud --quiet auth configure-docker "$GKE_LOCATION-docker.pkg.dev"

    - name: 'Build Docker image'
      run: |-
        # Use GKE_LOCATION consistently
        FULL_IMAGE_NAME="${{ env.GKE_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
        docker build \
          --tag "$FULL_IMAGE_NAME" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    - name: 'Publish Docker image to GAR'
      run: |-
        FULL_IMAGE_NAME="${{ env.GKE_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
        docker push "$FULL_IMAGE_NAME"

    - name: 'Deploy to GKE'
      run: |-
        kubectl apply -f wordpress_deployment.yaml
        kubectl get pods
